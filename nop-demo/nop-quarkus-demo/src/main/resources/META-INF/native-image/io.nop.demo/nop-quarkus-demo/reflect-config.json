[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "seal",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.HikariConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_BAD_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FORBIDDEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_NOT_FOUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_OK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_UNAUTHORIZED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_KEY_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_ORDER_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ATTR_SERVICE_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_ALL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_READ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_WRITE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_JSON_IGNORE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_READABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_WRITABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_PROTOTYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_SINGLETON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_CONTAINER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_VALUE_NONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECTIVE_ORDER_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECTIVE_PROP_META"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECtIVE_KEY_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING_ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_BIZ_FATAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_ERROR_CODE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_MSG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_STATUS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACCESS_TOKEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACTOR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_AUTH_TOKEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_KEY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CLIENT_ADDR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CONTENT_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_COOKIE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_DEVICE_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_LOCALE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ONE_WAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_REL_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SHARD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ACTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ROUTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TASK_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_NO"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_USER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_VERSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTTP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_API_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_AUTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_CACHE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_FLOW_CONTROL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_SINGLE_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TCC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TRANSACTIONAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_USER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "META_KEY_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NO_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_ENTITY_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_FIELD_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_PROP_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_TARGET_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SYS_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TEMP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_BODY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_LOC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "YES_VALUE"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.ApiConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "requireNew",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.orm.SingleSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "propagation",
        "parameterTypes": []
      },
      {
        "name": "txnGroup",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.txn.Transactional",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "copyHeaders",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      },
      {
        "name": "getSelectedHeaders",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiMessage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBooleanProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getFieldSelection",
        "parameterTypes": []
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getStringProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFieldSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "buildSuccess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getHttpStatus",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getMsgTimeout",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResponse",
        "parameterTypes": []
      },
      {
        "name": "isBizSuccess",
        "parameterTypes": []
      },
      {
        "name": "isHttp2XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp3XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp4XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp5XX",
        "parameterTypes": []
      },
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "isWrapper",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHttpStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMsgTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTryResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWrapper",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiResponse",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ExtensibleBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DEFAULT_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HIDDEN_SELECTION"
      }
    ],
    "methods": [
      {
        "name": "_flatten",
        "parameterTypes": [
          "java.util.Set",
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addCompositeField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "addDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addHiddenField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "flattenFields",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromProp",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "fromProps",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectives",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isSimpleField",
        "parameterTypes": []
      },
      {
        "name": "makeFields",
        "parameterTypes": []
      },
      {
        "name": "makeSubField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "mergeFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newFieldSelectionBean",
        "parameterTypes": []
      },
      {
        "name": "printTo",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean"
        ]
      },
      {
        "name": "setArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDirective",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.FieldSelectionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_AND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATETIME_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATE_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ENDS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EQ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EXPR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ICONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LIKE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_OR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_REGEX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_SQL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_STARTS_WITH"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.beans.FilterBeanConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHasNext",
        "parameterTypes": []
      },
      {
        "name": "getHasPrev",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getNextCursor",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPageCount",
        "parameterTypes": []
      },
      {
        "name": "getPrevCursor",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "isNoMore",
        "parameterTypes": []
      },
      {
        "name": "page",
        "parameterTypes": []
      },
      {
        "name": "pageCount",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHasNext",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPrev",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNextCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoMore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPrevCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.PageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "attr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "attrIgnoreNull",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "createFromJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toQueryBean",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.TreeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.TreeResultBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isComputed",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "setComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.VarMetaBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_HTML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JAVASCRIPT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_OCTET"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_XML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENt_TYPE_TEXT"
      }
    ],
    "methods": [
      {
        "name": "binary",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "js",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "json",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.WebContentBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getReqId",
        "parameterTypes": []
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setReqId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.CancelRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEdges",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getPageInfo",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "setEdges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPageInfo",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLPageInfo"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAfter",
        "parameterTypes": []
      },
      {
        "name": "getBefore",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "setAfter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBefore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFirst",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLast",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnectionInput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getNode",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNode",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLNode"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLEdgeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addLocation",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLSourceLocation"
        ]
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLErrorBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEndCursor",
        "parameterTypes": []
      },
      {
        "name": "getHasNextPage",
        "parameterTypes": []
      },
      {
        "name": "getHasPreviousPage",
        "parameterTypes": []
      },
      {
        "name": "getStartCursor",
        "parameterTypes": []
      },
      {
        "name": "setEndCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNextPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPreviousPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLPageInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getOperationId",
        "parameterTypes": []
      },
      {
        "name": "getOperationName",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getVariable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVariables",
        "parameterTypes": []
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOperationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "hasError",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toApiResponse",
        "parameterTypes": []
      },
      {
        "name": "toErrorBean",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "getLine",
        "parameterTypes": []
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLine",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLSourceLocation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.GroupFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isAsc",
        "parameterTypes": []
      },
      {
        "name": "isDesc",
        "parameterTypes": []
      },
      {
        "name": "reverse",
        "parameterTypes": []
      },
      {
        "name": "setAsc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.query.OrderFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "addGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getGroupBy",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJoins",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hasGroupBy",
        "parameterTypes": []
      },
      {
        "name": "hasGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isFindPrev",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFindPrev",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroupBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJoins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "transformFilter",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneExceptOwner",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAggFunc",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAggFunc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QuerySourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "activeProfile",
        "parameterTypes": []
      },
      {
        "name": "appLocale",
        "parameterTypes": []
      },
      {
        "name": "appName",
        "parameterTypes": []
      },
      {
        "name": "appTimezone",
        "parameterTypes": []
      },
      {
        "name": "appVersion",
        "parameterTypes": []
      },
      {
        "name": "defaultLocale",
        "parameterTypes": []
      },
      {
        "name": "getConfigProvider",
        "parameterTypes": []
      },
      {
        "name": "hostId",
        "parameterTypes": []
      },
      {
        "name": "isDebugMode",
        "parameterTypes": []
      },
      {
        "name": "registerConfigProvider",
        "parameterTypes": [
          "io.nop.api.core.config.IConfigProvider"
        ]
      },
      {
        "name": "var",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "var",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "varRef",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "varRef",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "withOverride",
        "parameterTypes": [
          "io.nop.api.core.config.IConfigReference",
          "java.lang.String"
        ]
      },
      {
        "name": "withOverride",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "io.nop.api.core.config.IConfigReference",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.config.AppConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "closed"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_seq"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "taskQueue"
      }
    ],
    "methods": [
      {
        "name": "checkClosed",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "executeBlocking",
        "parameterTypes": [
          "java.util.function.Supplier",
          "boolean"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCallExpireTime",
        "parameterTypes": []
      },
      {
        "name": "getCallIp",
        "parameterTypes": []
      },
      {
        "name": "getInternalContext",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getSeq",
        "parameterTypes": []
      },
      {
        "name": "getTaskQueue",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimezone",
        "parameterTypes": []
      },
      {
        "name": "getTraceId",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getUserRefNo",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isRunningOnContext",
        "parameterTypes": []
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "runOnContext",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCallExpireTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCallIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimezone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTraceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserRefNo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncGet",
        "parameterTypes": [
          "java.util.concurrent.CompletionStage"
        ]
      }
    ],
    "name": "io.nop.api.core.context.BaseContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fillInStackTrace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.exceptions.NopEvalException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_seq"
      }
    ],
    "methods": [
      {
        "name": "adapt",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addDetail",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Throwable",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "args",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "bizFatal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "cause",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "description",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forWrap",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorLocation",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getParam",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getParams",
        "parameterTypes": []
      },
      {
        "name": "getParamsString",
        "parameterTypes": []
      },
      {
        "name": "getSeq",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getXplStack",
        "parameterTypes": []
      },
      {
        "name": "isAlreadyTraced",
        "parameterTypes": []
      },
      {
        "name": "isBizFatal",
        "parameterTypes": []
      },
      {
        "name": "isWrapException",
        "parameterTypes": []
      },
      {
        "name": "loc",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "logIfNotTraced",
        "parameterTypes": [
          "org.slf4j.Logger",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "param",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "params",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAlreadyTraced",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "source",
        "parameterTypes": [
          "io.nop.api.core.util.ISourceLocationGetter"
        ]
      },
      {
        "name": "status",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "throwIfFatal",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "when",
        "parameterTypes": [
          "boolean",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.api.core.exceptions.NopException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.json.IJsonString",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.resource.IResourceReference",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "getSysDate",
        "parameterTypes": []
      },
      {
        "name": "getSysDateTime",
        "parameterTypes": []
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "nextWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ],
    "name": "io.nop.api.core.time.DefaultSysCalendar",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkEquals",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkFromTo",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkOffsetLength",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "nonNegativeInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "nonNegativeLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "notEmpty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "notNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.util.Guard",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ICloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IDeepCloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IWithIdentifier",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addBreakpoint",
        "parameterTypes": [
          "io.nop.api.debugger.Breakpoint"
        ]
      },
      {
        "name": "clearBreakpoints",
        "parameterTypes": []
      },
      {
        "name": "getBreakpointAt",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "getBreakpoints",
        "parameterTypes": []
      },
      {
        "name": "removeBreakpoint",
        "parameterTypes": [
          "io.nop.api.debugger.Breakpoint"
        ]
      },
      {
        "name": "setBreakpoints",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.api.debugger.IBreakpointManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "expandExprValue",
        "parameterTypes": [
          "long",
          "int",
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "getExprValue",
        "parameterTypes": [
          "long",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "getFrameVariables",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "getScopeVariables",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getStackInfo",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getSuspendedThreads",
        "parameterTypes": []
      },
      {
        "name": "isBreakpointsMuted",
        "parameterTypes": []
      },
      {
        "name": "isSuspended",
        "parameterTypes": []
      },
      {
        "name": "muteBreakpoints",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "resume",
        "parameterTypes": []
      },
      {
        "name": "runToPosition",
        "parameterTypes": [
          "io.nop.api.debugger.Breakpoint"
        ]
      },
      {
        "name": "stepInto",
        "parameterTypes": []
      },
      {
        "name": "stepOut",
        "parameterTypes": []
      },
      {
        "name": "stepOver",
        "parameterTypes": []
      },
      {
        "name": "suspend",
        "parameterTypes": []
      },
      {
        "name": "updateBreakpoints",
        "parameterTypes": [
          "java.util.List",
          "boolean"
        ]
      },
      {
        "name": "waitSuspended",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.debugger.IDebugger",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessCode",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessCodeRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCertId",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceType",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRoleId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalSecret",
        "parameterTypes": []
      },
      {
        "name": "getSsoToken",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": []
      },
      {
        "name": "getVerifySecret",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isRememberMe",
        "parameterTypes": []
      },
      {
        "name": "setCertId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrimaryRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberMe",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSsoToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifySecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getSessionState",
        "parameterTypes": []
      },
      {
        "name": "getTokenType",
        "parameterTypes": []
      },
      {
        "name": "getUserInfo",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserInfo",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginUserInfo"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginResult",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getHomePath",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getUserNick",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHomePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserNick",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginUserInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LogoutRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.RefreshTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addResource",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "deepCloneResources",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "isSupportDebug",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setResources",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sortResources",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteMapBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "fixStatus",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getMeta",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAuthCascadeUp",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "isNoAuth",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setAuthCascadeUp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setMeta",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sortChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteResourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setCacheConfig",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      }
    ],
    "name": "io.nop.auth.core.context.LocalUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.context.RandomSessionIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAuthCookie",
        "parameterTypes": []
      },
      {
        "name": "getAuthPaths",
        "parameterTypes": []
      },
      {
        "name": "getLoginUrl",
        "parameterTypes": []
      },
      {
        "name": "getLogoutUrl",
        "parameterTypes": []
      },
      {
        "name": "getPublicPaths",
        "parameterTypes": []
      },
      {
        "name": "isDefaultPublic",
        "parameterTypes": []
      },
      {
        "name": "isPublicPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthCookie",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultPublic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoginUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthFilterConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkLogoutUrl",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromCookie",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromHeader",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "handleUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "initUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isAjaxRequest",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isNeedRefresh",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.auth.core.filter.AuthFilterConfig"
        ]
      },
      {
        "name": "setLoginService",
        "parameterTypes": [
          "io.nop.auth.core.login.ILoginService"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateAccessCode",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateAccessToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateRefreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": []
      },
      {
        "name": "getEncKey",
        "parameterTypes": []
      },
      {
        "name": "getSessionIdFromAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionIdFromRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSignKey",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.jwt.JwtAuthTokenProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginSessionStore"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextHook"
      }
    ],
    "methods": [
      {
        "name": "doGetUserContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "doLogout",
        "parameterTypes": [
          "int",
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractLoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "config"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginFailCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userSessionCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeCache"
      }
    ],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.ILoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.LocalUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.login.RandomSessionIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLoginFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxLoginUserCount",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCodeTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyKey",
        "parameterTypes": []
      },
      {
        "name": "setLoginFailTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxLoginUserCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyCodeTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearDirty",
        "parameterTypes": []
      },
      {
        "name": "dirty",
        "parameterTypes": []
      },
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRole",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "isUserInAnyRole",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isUserInRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "markDirty",
        "parameterTypes": []
      },
      {
        "name": "removeRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.core.model.ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.core.model.DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      }
    ],
    "name": "io.nop.auth.core.model.ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "mergeChecker",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "mergeFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      }
    ],
    "name": "io.nop.auth.core.model.RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addResource",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "addRole",
        "parameterTypes": [
          "io.nop.auth.core.model.AuthRoleModel"
        ]
      },
      {
        "name": "addSite",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "hasResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoles",
        "parameterTypes": []
      },
      {
        "name": "hasSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSites",
        "parameterTypes": []
      },
      {
        "name": "keySet_roles",
        "parameterTypes": []
      },
      {
        "name": "keySet_sites",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSites",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addObj",
        "parameterTypes": [
          "io.nop.auth.core.model.ObjDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObjs",
        "parameterTypes": []
      },
      {
        "name": "hasObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObjs",
        "parameterTypes": []
      },
      {
        "name": "keySet_objs",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setObjs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleAuth",
        "parameterTypes": [
          "io.nop.auth.core.model.RoleDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "hasRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "keySet_roleAuths",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheck",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheck",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.BCryptPasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "getFirstEncoder",
        "parameterTypes": []
      },
      {
        "name": "getSecondEncoder",
        "parameterTypes": []
      },
      {
        "name": "isUseSecondSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setSecondEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setUseSecondSalt",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.CompositePasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowedPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDigitCount",
        "parameterTypes": []
      },
      {
        "name": "getLowerCaseCount",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getSpecialCharCount",
        "parameterTypes": []
      },
      {
        "name": "getUpperCaseCount",
        "parameterTypes": []
      },
      {
        "name": "isNotUserName",
        "parameterTypes": []
      },
      {
        "name": "setDigitCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLowerCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNotUserName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSpecialCharCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUpperCaseCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.DefaultPasswordPolicy",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.SHA256PasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "height"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "length"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "width"
      }
    ],
    "methods": [
      {
        "name": "checkValid",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "color",
        "parameterTypes": []
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawImage",
        "parameterTypes": [
          "java.lang.String",
          "java.io.OutputStream"
        ]
      },
      {
        "name": "drawLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "generateCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadFont",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.verifycode.DefaultVerifyCodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoot",
        "parameterTypes": []
      },
      {
        "name": "isTopMenu",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getDeptName",
        "parameterTypes": []
      },
      {
        "name": "getDeptType",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getOrderNum",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getLoginValue",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLoginValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizActionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizActionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_session"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizActionName",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getLogId",
        "parameterTypes": []
      },
      {
        "name": "getOpRequest",
        "parameterTypes": []
      },
      {
        "name": "getOpResponse",
        "parameterTypes": []
      },
      {
        "name": "getResultStatus",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUsedTime",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizActionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpRequest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpResponse",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResultStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSession"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsedTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_linkTarget"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_linkTarget"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_site"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getHidden",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getIsLeaf",
        "parameterTypes": []
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "getLinkTarget",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfig",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getNoAuth",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getOrderNum",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfig",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeaf",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLinkTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetaConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOrderNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropsConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSite",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSite"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isParent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentRoleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isParent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentRoleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsParent",
        "parameterTypes": []
      },
      {
        "name": "getIsPrimary",
        "parameterTypes": []
      },
      {
        "name": "getParentRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelatedResourceList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceList_label",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelatedUserList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRoleName",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserMappings",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildRoleIds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsPrimary",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsPrimary",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedResourceIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObj",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resource"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastAccessTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginAddr",
        "parameterTypes": []
      },
      {
        "name": "getLoginApp",
        "parameterTypes": []
      },
      {
        "name": "getLoginDevice",
        "parameterTypes": []
      },
      {
        "name": "getLoginOs",
        "parameterTypes": []
      },
      {
        "name": "getLoginStatus",
        "parameterTypes": []
      },
      {
        "name": "getLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getLogoutBy",
        "parameterTypes": []
      },
      {
        "name": "getLogoutTime",
        "parameterTypes": []
      },
      {
        "name": "getLogoutType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastAccessTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setLoginAddr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginApp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginDevice",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginOs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLoginTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogoutBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLogoutType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resources"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBeginTime",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBeginTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_changePassword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idNumber"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userNick"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatarComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_changePassword"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dept"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idNumber"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_position"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutionMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userNick"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workNo"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getAvatarComponent",
        "parameterTypes": []
      },
      {
        "name": "getBirthday",
        "parameterTypes": []
      },
      {
        "name": "getChangePassword",
        "parameterTypes": []
      },
      {
        "name": "getChangePwdAtLogin",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDept",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getEmailVerified",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getGender",
        "parameterTypes": []
      },
      {
        "name": "getIdNbr",
        "parameterTypes": []
      },
      {
        "name": "getIdNumber",
        "parameterTypes": []
      },
      {
        "name": "getIdType",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getPhoneVerified",
        "parameterTypes": []
      },
      {
        "name": "getPosition",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getPwdUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getSalt",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutionMappings",
        "parameterTypes": []
      },
      {
        "name": "getTelephone",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getUserNick",
        "parameterTypes": []
      },
      {
        "name": "getUserType",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWorkNo",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBirthday",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setChangePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChangePwdAtLogin",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDept",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmailVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdNbr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhoneVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setPosition",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthPosition"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPwdUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTelephone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserNick",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorkNo",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUser"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUser",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUserId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSubstitutedUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setSubstitutedUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateUserId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "generateUserOpenId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      }
    ],
    "name": "io.nop.auth.dao.generator.DefaultUserIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "buildLog",
        "parameterTypes": [
          "io.nop.api.core.audit.AuditRequest"
        ]
      },
      {
        "name": "buildLog",
        "parameterTypes": [
          "io.nop.auth.core.audit.AuditRequest"
        ]
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "saveAudit",
        "parameterTypes": [
          "io.nop.api.core.audit.AuditRequest"
        ]
      },
      {
        "name": "saveAudit",
        "parameterTypes": [
          "io.nop.auth.core.audit.AuditRequest"
        ]
      }
    ],
    "name": "io.nop.auth.service.audit.AuditServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.audit.AuditServiceImpl__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setSiteMapProvider",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteMapProviderImpl"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultActionAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAIN_DATA_AUTH_XML"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "loadDataAuthModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultDataAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "authTokenProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextManager"
      }
    ],
    "methods": [
      {
        "name": "buildLoginResult",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginResultAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessCodeRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getLoginUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getLoginUserInfoAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LogoutRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshTokenAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.RefreshTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.LoginApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "filterForUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.SiteMapApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "auditService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "sessionIdGenerator"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      }
    ],
    "methods": [
      {
        "name": "auditLogFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.auth.api.messages.LoginRequest",
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "buildUserContext",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser",
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateSessionId",
        "parameterTypes": []
      },
      {
        "name": "getAllowedLoginMethods",
        "parameterTypes": []
      },
      {
        "name": "getUserByEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByOpenId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserInfoAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "isValidLoginMethod",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "loadSession",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.core.context.IServiceContext",
          "long"
        ]
      },
      {
        "name": "setAllowedLoginMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAuditService",
        "parameterTypes": [
          "io.nop.auth.core.audit.IAuditService"
        ]
      }
    ],
    "name": "io.nop.auth.service.context.UserContextManagerImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthDeptBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthExtLoginBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthOpLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthPositionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getMenuTree",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshSiteMapCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "roleResourceIds",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "roleUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "updateRoleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleDataAuthBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSessionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSiteBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthTenantBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordPolicy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "changeSelfPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "disableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "enableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "processBeforeSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "resetUserPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserSubstitutionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "sessionIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "getActionSessions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadSession",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logoutSession",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.DaoLoginSessionStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "auditService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "authTokenProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeGenerator"
      }
    ],
    "methods": [
      {
        "name": "addDefaultUser",
        "parameterTypes": []
      },
      {
        "name": "auditLogFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.auth.api.messages.LoginRequest",
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "autoLogout",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "buildUserContext",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser",
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "checkVerifyCode",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllowedLoginMethods",
        "parameterTypes": []
      },
      {
        "name": "getAuthUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "getUserByEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByOpenId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "isValidLoginMethod",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "needCheckPassword",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextImpl",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "setAllowedLoginMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.LoginServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteCache"
      }
    ],
    "methods": [
      {
        "name": "applyAuthFilter",
        "parameterTypes": [
          "java.util.List",
          "java.util.Map",
          "java.util.Set"
        ]
      },
      {
        "name": "containsRole",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "filterAllowedMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getAllowedSiteEntries",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getRoleResources",
        "parameterTypes": []
      },
      {
        "name": "getRolesWithPermission",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "loadSiteData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadStaticSiteMap",
        "parameterTypes": []
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteCacheData",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeLabel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "refreshCache",
        "parameterTypes": []
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.service.sitemap.SiteMapProviderImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "appendOrderByPk",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "asDict",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchGet",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchModify",
        "parameterTypes": [
          "java.util.List",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkDataAuth",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkDataAuthAfterUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkEntityFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkEntityFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkMandatoryParam",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkUniqueForSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData"
        ]
      },
      {
        "name": "copyForNew",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "dao",
        "parameterTypes": []
      },
      {
        "name": "daoFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "daoProvider",
        "parameterTypes": []
      },
      {
        "name": "defaultPrepareDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleteReferences",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleted_findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doCopyForNew",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDelete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSaveEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdate",
        "parameterTypes": [
          "java.util.Map",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCascadeProps",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao"
        ]
      },
      {
        "name": "getThisObj",
        "parameterTypes": []
      },
      {
        "name": "invokeAction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext",
          "io.nop.biz.crud.BizInvocation"
        ]
      },
      {
        "name": "newArgs",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "orm",
        "parameterTypes": []
      },
      {
        "name": "prepareFindFirstQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "prepareFindPageQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "processBeforeSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "processBeforeUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "recoverDeleted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeRelation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "save_update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryTransformer",
        "parameterTypes": [
          "io.nop.dao.api.IQueryTransformer"
        ]
      },
      {
        "name": "triggerStateChange",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryDelete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "trySave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "trySave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.Map",
          "java.util.function.Predicate",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.ConfigVarBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "beans",
        "parameterTypes": []
      },
      {
        "name": "configVars",
        "parameterTypes": []
      },
      {
        "name": "dependsSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.global.IGlobalVariableDefinition"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "getFunctionDocKey",
        "parameterTypes": [
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "globalFunctions",
        "parameterTypes": []
      },
      {
        "name": "globalVars",
        "parameterTypes": []
      },
      {
        "name": "graphql",
        "parameterTypes": []
      },
      {
        "name": "methods",
        "parameterTypes": [
          "io.nop.biz.dev.GlobalVariableDefBean"
        ]
      },
      {
        "name": "methods",
        "parameterTypes": [
          "io.nop.biz.dev.beans.GlobalVariableDefBean"
        ]
      },
      {
        "name": "toArgBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "toArgsBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "toFunctionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      }
    ],
    "name": "io.nop.biz.dev.DevDocBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearComponentCache",
        "parameterTypes": []
      },
      {
        "name": "refreshVirtualFileSystem",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.dev.DevToolBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.FunctionArgBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeclaringClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.FunctionDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isStaticClass",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.GlobalVariableDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.ConfigVarBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionArgBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeclaringClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isStaticClass",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.GlobalVariableDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.biz.dict.DictProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dict.ObjDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildResponse",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBizObjNames",
        "parameterTypes": []
      },
      {
        "name": "getBizObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGraphQLDocument",
        "parameterTypes": []
      },
      {
        "name": "getObjectTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType"
        ]
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTypeDefinitions",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "resolveTypeDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLType"
        ]
      },
      {
        "name": "setActionDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizModelBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizNamingStrategy",
        "parameterTypes": [
          "io.nop.biz.api.IBizNamingStrategy"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setMakerCheckerProvider",
        "parameterTypes": [
          "io.nop.biz.makerchecker.IMakerCheckerProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setSchemaInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTypeRegistry",
        "parameterTypes": [
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      }
    ],
    "name": "io.nop.biz.impl.BizObjectManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAuth",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      }
    ],
    "name": "io.nop.biz.impl.DefaultBizAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "getBizModelPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.impl.DefaultBizNamingStrategy",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseValidator",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "runValidator",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runValidator",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runValidatorModel",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.biz.lib.BizValidatorHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizActionArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExecutable",
        "parameterTypes": []
      },
      {
        "name": "getOperationType",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isReturnMandatory",
        "parameterTypes": []
      },
      {
        "name": "setExecutable",
        "parameterTypes": [
          "io.nop.core.context.action.IServiceAction"
        ]
      }
    ],
    "name": "io.nop.biz.model.BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultExpr",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.api.core.annotations.biz.BizActionArgKind"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizActionArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.biz.model.BizActionArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheEvicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getMakerChecker",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturn",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTcc",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTxn",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isBizSequential",
        "parameterTypes": []
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setBizSequential",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.biz.model.BizCacheModel"
        ]
      },
      {
        "name": "setCacheEvicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerChecker",
        "parameterTypes": [
          "io.nop.biz.model.BizMakerCheckerModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturn",
        "parameterTypes": [
          "io.nop.biz.model.BizReturnModel"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTcc",
        "parameterTypes": [
          "io.nop.biz.model.BizTccModel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTxn",
        "parameterTypes": [
          "io.nop.biz.model.BizTxnModel"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAction",
        "parameterTypes": [
          "io.nop.biz.model.BizActionModel"
        ]
      },
      {
        "name": "addLoader",
        "parameterTypes": [
          "io.nop.biz.model.BizLoaderModel"
        ]
      },
      {
        "name": "addObserve",
        "parameterTypes": [
          "io.nop.biz.model.BizObserveModel"
        ]
      },
      {
        "name": "addSubscribe",
        "parameterTypes": [
          "io.nop.biz.model.BizSubscribeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getDisabledActions",
        "parameterTypes": []
      },
      {
        "name": "getInheritActions",
        "parameterTypes": []
      },
      {
        "name": "getLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoaders",
        "parameterTypes": []
      },
      {
        "name": "getMetaDir",
        "parameterTypes": []
      },
      {
        "name": "getObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObserves",
        "parameterTypes": []
      },
      {
        "name": "getStateMachine",
        "parameterTypes": []
      },
      {
        "name": "getSubscribe",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSubscribes",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "hasAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasActions",
        "parameterTypes": []
      },
      {
        "name": "hasLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasLoaders",
        "parameterTypes": []
      },
      {
        "name": "hasObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObserves",
        "parameterTypes": []
      },
      {
        "name": "hasSubscribe",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSubscribes",
        "parameterTypes": []
      },
      {
        "name": "keySet_actions",
        "parameterTypes": []
      },
      {
        "name": "keySet_loaders",
        "parameterTypes": []
      },
      {
        "name": "keySet_observes",
        "parameterTypes": []
      },
      {
        "name": "keySet_subscribes",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInheritActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLoaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMetaDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObserves",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStateMachine",
        "parameterTypes": [
          "io.nop.fsm.model.StateMachineModel"
        ]
      },
      {
        "name": "setSubscribes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "chooseFromCandidates",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "setLoadBalance",
        "parameterTypes": [
          "io.nop.cluster.lb.ILoadBalance"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.LoadBalanceServerChooser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getServers",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getServersAsync",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDiscoveryClient",
        "parameterTypes": [
          "io.nop.cluster.discovery.IDiscoveryClient"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.ServiceServerChooser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.filter.HealthyServiceInstanceFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.List",
          "io.nop.api.core.beans.ApiRequest",
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticRoute",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStaticRouteConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.filter.RouteServiceInstanceFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.List",
          "io.nop.api.core.beans.ApiRequest",
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.filter.SpecificServiceInstanceFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.List",
          "io.nop.api.core.beans.ApiRequest",
          "boolean"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.filter.TagServiceInstanceFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.List",
          "io.nop.api.core.beans.ApiRequest",
          "boolean"
        ]
      },
      {
        "name": "getZone",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "isForce",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.cluster.chooser.filter.ZoneServiceInstanceFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.FirstLoadBalance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "setMaxCandidateCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.LeastActiveLoadBalance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.RandomLoadBalance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.RoundRobinLoadBalance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getActiveCount",
        "parameterTypes": [
          "io.nop.cluster.discovery.ServiceInstance"
        ]
      },
      {
        "name": "getWeight",
        "parameterTypes": [
          "io.nop.cluster.discovery.ServiceInstance"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.ServiceLoadBalanceAdapter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "choose",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.cluster.lb.impl.WeightedRandomLoadBalance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "async",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "expireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "expireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getExpireAfterAccess",
        "parameterTypes": []
      },
      {
        "name": "getExpireAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "getMaximumSize",
        "parameterTypes": []
      },
      {
        "name": "getMaximumWeight",
        "parameterTypes": []
      },
      {
        "name": "getRefreshAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isCacheTypeChanged",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      },
      {
        "name": "isDestroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "isWeakKeys",
        "parameterTypes": []
      },
      {
        "name": "isWeakValues",
        "parameterTypes": []
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDestroyOnRemove",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumWeight",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useMetrics",
        "parameterTypes": []
      },
      {
        "name": "weakKeys",
        "parameterTypes": []
      },
      {
        "name": "weakValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.CacheConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.LocalCacheProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAllUnique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "emptyList",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "freezeList",
        "parameterTypes": []
      },
      {
        "name": "fromList",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.Function"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.collections.KeyedList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getProcessingCount",
        "parameterTypes": []
      },
      {
        "name": "getQueue",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolName",
        "parameterTypes": []
      },
      {
        "name": "isAllProcessed",
        "parameterTypes": []
      },
      {
        "name": "setQueueConfig",
        "parameterTypes": [
          "io.nop.commons.concurrent.batch.BatchQueueConfig"
        ]
      },
      {
        "name": "setSpecialMessageProcessor",
        "parameterTypes": [
          "io.nop.api.core.message.ISpecialMessageProcessor"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.concurrent.batch.AbstractBatchProcessService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "findAddr",
        "parameterTypes": []
      },
      {
        "name": "setAddr",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.commons.io.net.DefaultServerAddrFinder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.ICancellable"
        ]
      },
      {
        "name": "appendOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCancelReason",
        "parameterTypes": []
      },
      {
        "name": "isCancelled",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.ICancellable"
        ]
      },
      {
        "name": "prependOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "removeOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "tryRunCallbacks",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.impl.Cancellable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.ILifeCycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginStop",
        "parameterTypes": []
      },
      {
        "name": "checkIsActive",
        "parameterTypes": []
      },
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAllowRestart",
        "parameterTypes": []
      },
      {
        "name": "setAllowRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.LifeCycleSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "lower"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DURATION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LIST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NEVER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "POINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SHORT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "STRING"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "UNKNOWN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VOID"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromJavaClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "fromJavaClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromJsonName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDemoJsonValue",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getMaxIndex",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getSimpleClassName",
        "parameterTypes": []
      },
      {
        "name": "isAbstractType",
        "parameterTypes": []
      },
      {
        "name": "isBoolType",
        "parameterTypes": []
      },
      {
        "name": "isGeoType",
        "parameterTypes": []
      },
      {
        "name": "isListType",
        "parameterTypes": []
      },
      {
        "name": "isMapType",
        "parameterTypes": []
      },
      {
        "name": "isNumericType",
        "parameterTypes": []
      },
      {
        "name": "isPrimitiveType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTemporalType",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toInitializer",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTEGER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NUMERIC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "OTHER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SMALLINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TINYINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARBINARY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdSqlType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_TIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_DAY_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_HOUR_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_MINUTE_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME_FORMATTER"
      }
    ],
    "methods": [
      {
        "name": "buildFormatter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentLocalDate",
        "parameterTypes": []
      },
      {
        "name": "currentTimeMillis",
        "parameterTypes": []
      },
      {
        "name": "diffDays",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstInMonth",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp",
          "java.lang.String"
        ]
      },
      {
        "name": "fromUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDayStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getHourStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "isMonthDay",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.MonthDay"
        ]
      },
      {
        "name": "lastDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "lastDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "localDateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "localDateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "millisToLocalDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "parseDuration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerFormatter",
        "parameterTypes": [
          "java.lang.String",
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "toDayOfWeek",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "toUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "toZone",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.time.ZoneId"
        ]
      },
      {
        "name": "zone",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.commons.util.DateHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_DOUBLE_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_INTEGER_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_INT_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_JS_LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_JS_LONG_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_LONG_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_LONG_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_DOUBLE_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_INTEGER_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_LONG_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_REAL_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NaN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PI"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ZERO_INT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ZERO_LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "primitiveDefaults"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_secureRand"
      }
    ],
    "methods": [
      {
        "name": "abs",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "band",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "bneg",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "bor",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "bxor",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ceil",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "compareBoolean",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compareLong",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "compareUnsignedInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compareUnsignedLong",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "compareWithConversion",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "compareWithDouble",
        "parameterTypes": [
          "double",
          "double",
          "double"
        ]
      },
      {
        "name": "cos",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "digitsOfInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "digitsOfLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "divide",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "divideByAndCeilToInt",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndCeilToLong",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndRoundToInt",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndRoundToLong",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divide_int",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "eq",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "exp",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "floor",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "gcd",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "gcd",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "ge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "getPrimitiveDefaultValue",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "gt",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isInteger",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isPowerOfTwoForLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isSafeJsLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isSameReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "le",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "log10",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "log2Int",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "log2Long",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "lt",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "minus",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "mod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "modPowerOfTwo",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "modPowerOfTwoForLong",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "multiply",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "neg",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newInteger",
        "parameterTypes": [
          "int",
          "long"
        ]
      },
      {
        "name": "newReal",
        "parameterTypes": [
          "int",
          "double"
        ]
      },
      {
        "name": "nextPowerOfTwo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "nextPowerOfTwoForLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "nonNegativeMod",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "normalizeInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "normalizeLong",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "pow",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "random",
        "parameterTypes": []
      },
      {
        "name": "randomChoose",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "randomSelect",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "randomizeDouble",
        "parameterTypes": [
          "double",
          "double"
        ]
      },
      {
        "name": "randomizeLong",
        "parameterTypes": [
          "long",
          "double"
        ]
      },
      {
        "name": "roundDown",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "roundHalfEven",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "roundHalfUp",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "safeDoubleToFloat",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "safeIntToByte",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeIntToChar",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeIntToShort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeLongToInt",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "safeNextPowerOfTwo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "secureRandom",
        "parameterTypes": []
      },
      {
        "name": "sin",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sl",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "sqrt",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "square",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sr",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "usr",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "xlangEq",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.commons.util.MathHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAfterComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addBeforeComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addErrorBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "awaitAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "cancelAll",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "cancelAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "complete",
        "parameterTypes": []
      },
      {
        "name": "completeExceptionally",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fireAfterComplete",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fireBeforeComplete",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getErrorBeans",
        "parameterTypes": []
      },
      {
        "name": "getEvalScope",
        "parameterTypes": []
      },
      {
        "name": "getExecutionId",
        "parameterTypes": []
      },
      {
        "name": "getMostSevereErrorBean",
        "parameterTypes": []
      },
      {
        "name": "hasAsyncResult",
        "parameterTypes": []
      },
      {
        "name": "isDone",
        "parameterTypes": []
      },
      {
        "name": "registerAsyncResult",
        "parameterTypes": [
          "java.util.concurrent.Future"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setErrorBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEvalScope",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "setExecutionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.context.ExecutionContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearResponseHeaders",
        "parameterTypes": []
      },
      {
        "name": "getActionAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getDataAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getParentContext",
        "parameterTypes": []
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "getRequestHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "getResponse",
        "parameterTypes": []
      },
      {
        "name": "getResponseHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseHeaders",
        "parameterTypes": []
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      },
      {
        "name": "newChildContext",
        "parameterTypes": []
      },
      {
        "name": "newServiceContextImpl",
        "parameterTypes": []
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICache"
        ]
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setParentContext",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setRequest",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRequestHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRequestHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setResponseHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setResponseHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      }
    ],
    "name": "io.nop.core.context.ServiceContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.CoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "checkMandatory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkMaxItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "checkMinItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "copyExtFieldsTo",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getASTParent",
        "parameterTypes": []
      },
      {
        "name": "getASTParentParent",
        "parameterTypes": []
      },
      {
        "name": "getASTType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayString",
        "parameterTypes": []
      },
      {
        "name": "getLeadingComment",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getTrailingComment",
        "parameterTypes": []
      },
      {
        "name": "isEquivalentTo",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isListEquivalent",
        "parameterTypes": [
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "isNodeEquivalent",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isValueEquivalent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "processChild",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "removeInList",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "replaceInList",
        "parameterTypes": [
          "java.util.List",
          "int",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "requireParentheses",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "serializeFields",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setASTParent",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "setLeadingComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTrailingComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.ast.ASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getASTType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.ast.IASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL_ACTION"
      }
    ],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.eval.IEvalAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ALWAYS_TRUE"
      }
    ],
    "methods": [
      {
        "name": "passConditions",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.eval.IEvalPredicate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isJsonOrYaml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadBean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "loadDeltaBean",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type",
          "io.nop.core.lang.json.DeltaJsonOptions"
        ]
      },
      {
        "name": "loadJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseBeanFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseBeanFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "parseBeanFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type",
          "boolean"
        ]
      },
      {
        "name": "parseBeanFromText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "parseBeanFromVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseBeanFromYaml",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "parseNonStrict",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "parseNonStrict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseSimpleJsonValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseSimpleJsonValue",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "parseYaml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonTool"
        ]
      },
      {
        "name": "serialize",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      },
      {
        "name": "serializeToYaml",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "stringify",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "stringify",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function",
          "java.lang.String"
        ]
      },
      {
        "name": "toYaml",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "tryLoadBean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.JsonTool",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.sql.ISqlGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "chunk",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "compact",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "filterNull",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findIndex",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "getFieldValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexByFields",
        "parameterTypes": [
          "java.util.Collection",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "invert",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "mergeMap",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "omit",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "pairs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "partition",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "pick",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pickNotNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pluck",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckAsMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckThenJoin",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "rename",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "retainAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "toJObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "unique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.Underscore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateNode",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.IXNodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "after",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "after",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonObject",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "assignAttrs",
        "parameterTypes": [
          "io.nop.core.lang.json.JObject",
          "java.util.Map"
        ]
      },
      {
        "name": "beginListItem",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginObjectChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "currentList",
        "parameterTypes": []
      },
      {
        "name": "currentObject",
        "parameterTypes": []
      },
      {
        "name": "currentTagInfo",
        "parameterTypes": []
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getList",
        "parameterTypes": []
      },
      {
        "name": "getPropName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "boolean"
        ]
      },
      {
        "name": "getResult",
        "parameterTypes": []
      },
      {
        "name": "hasObjAttr",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isListType",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newList",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "newObject",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "processNode",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.CollectJObjectHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "beginDoc",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrBoolean",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getAttrDouble",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "getAttrInt",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.XNodeHandlerAdapter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ICell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ICellView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      }
    ],
    "name": "io.nop.core.model.table.IRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.IRowView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ITable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ITableView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractCell"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_deleteCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_expandProxy",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "_insertCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_isSpaceAvailable",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "_removeProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "addRow",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractRow"
        ]
      },
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "doRemoveCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "doSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getFooterCount",
        "parameterTypes": []
      },
      {
        "name": "getHeaderCount",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getSideCount",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "invalidateColCount",
        "parameterTypes": []
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "normalizeMergeRanges",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toDebugString",
        "parameterTypes": []
      },
      {
        "name": "toHtmlString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      },
      {
        "name": "validateProxy",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "validateRealCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.BaseCell"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.BaseCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.tree.ITreeChildrenStructure",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.validator.ValidatorCheckModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.validator.ValidatorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCondition",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorDescription",
        "parameterTypes": []
      },
      {
        "name": "getErrorParams",
        "parameterTypes": []
      },
      {
        "name": "getErrorStatus",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getSeverity",
        "parameterTypes": []
      },
      {
        "name": "hasErrorParams",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCondition",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setErrorStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeverity",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.validator._gen._ValidatorCheckModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCheck",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorCheckModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCheck",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCheckLibPath",
        "parameterTypes": []
      },
      {
        "name": "getChecks",
        "parameterTypes": []
      },
      {
        "name": "getCondition",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorDescription",
        "parameterTypes": []
      },
      {
        "name": "getErrorParams",
        "parameterTypes": []
      },
      {
        "name": "getErrorStatus",
        "parameterTypes": []
      },
      {
        "name": "getFatalSeverity",
        "parameterTypes": []
      },
      {
        "name": "getObj",
        "parameterTypes": []
      },
      {
        "name": "getSeverity",
        "parameterTypes": []
      },
      {
        "name": "hasCheck",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasChecks",
        "parameterTypes": []
      },
      {
        "name": "hasErrorParams",
        "parameterTypes": []
      },
      {
        "name": "keySet_checks",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCheckLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChecks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCondition",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setErrorStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFatalSeverity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setObj",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSeverity",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.validator._gen._ValidatorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "_instance"
      }
    ],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "discover",
        "parameterTypes": []
      },
      {
        "name": "findModuleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getAllModuleResources",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledModuleIds",
        "parameterTypes": []
      },
      {
        "name": "getModuleResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "instance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.module.ModuleManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropSetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.IFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResourceLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_zipTool"
      }
    ],
    "methods": [
      {
        "name": "assertDirectory",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "buildClassPath",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "buildDeltaPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildNamespacePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildResourceFromURL",
        "parameterTypes": [
          "java.lang.String",
          "java.net.URL"
        ]
      },
      {
        "name": "buildTenantPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildTextScanner",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "checkNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "filePostfixFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "genDayRandPath",
        "parameterTypes": []
      },
      {
        "name": "getAppProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "getCpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeltaLayerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDumpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getParentPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPathNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelatedResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStepListener",
        "parameterTypes": [
          "io.nop.api.core.util.progress.IProgressListener",
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getSubPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTempResource",
        "parameterTypes": []
      },
      {
        "name": "getTempResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipTool",
        "parameterTypes": []
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDeltaPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTenantPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isZipFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "readBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "registerZipTool",
        "parameterTypes": [
          "io.nop.core.resource.zip.IZipTool"
        ]
      },
      {
        "name": "removeNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePathResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativeStdPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveResource",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "unzip",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "unzipToDir",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "writeBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "[B"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.Properties"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "zipDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipDirToStream",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "java.io.OutputStream",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      }
    ],
    "name": "io.nop.core.resource.ResourceHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isInitialized",
        "parameterTypes": []
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.resource.IVirtualFileSystem"
        ]
      },
      {
        "name": "unregisterInstance",
        "parameterTypes": [
          "io.nop.core.resource.IVirtualFileSystem"
        ]
      }
    ],
    "name": "io.nop.core.resource.VirtualFileSystem",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.resource.component.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildComponentPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectDepends",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "collectDependsTo",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "dumpDependsSet",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet"
        ]
      },
      {
        "name": "findModelTypeFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponentModelLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponentModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getModelConfigByModelPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModelDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSubComponent",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.util.IComponentModel",
          "java.lang.String"
        ]
      },
      {
        "name": "ignoreDepends",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isAnyDependsChange",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isAnyDependsChange",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "isDependencyChanged",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModelByUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadGeneratedComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadPrecompiledObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "registerComponentModelConfig",
        "parameterTypes": [
          "io.nop.core.resource.component.ComponentModelConfig"
        ]
      },
      {
        "name": "registerComponentModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.IResourceObjectLoader",
          "boolean"
        ]
      },
      {
        "name": "registerComponentModelTransformer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.component.IComponentTransformer",
          "boolean"
        ]
      },
      {
        "name": "registerComponentModelTransformer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.resource.component.IResourceComponentManager"
        ]
      },
      {
        "name": "resolveModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "runWhenDependsChanged",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setChangeChecker",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceChangeChecker"
        ]
      },
      {
        "name": "setDependsPersister",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceDependsPersister"
        ]
      },
      {
        "name": "traceAllDepends",
        "parameterTypes": [
          "java.util.Set"
      