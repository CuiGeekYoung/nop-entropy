MultiLineComment=1
SingleLineComment=2
RegularExpressionLiteral=3
OpenBracket=4
CloseBracket=5
OpenParen=6
CloseParen=7
OpenBrace=8
CloseBrace=9
SemiColon=10
Comma=11
Assign=12
NullCoalesce=13
Question=14
OptionalDot=15
Colon=16
ColonColon=17
Ellipsis=18
Dot=19
PlusPlus=20
MinusMinus=21
Plus=22
Minus=23
BitNot=24
Not=25
Multiply=26
Divide=27
Modulus=28
RightShiftArithmetic=29
LeftShiftArithmetic=30
RightShiftLogical=31
LessThan=32
MoreThan=33
LessThanEquals=34
GreaterThanEquals=35
Equals_=36
NotEquals=37
IdentityEquals=38
IdentityNotEquals=39
BitAnd=40
BitXOr=41
BitOr=42
And=43
Or=44
MultiplyAssign=45
DivideAssign=46
ModulusAssign=47
PlusAssign=48
MinusAssign=49
LeftShiftArithmeticAssign=50
RightShiftArithmeticAssign=51
RightShiftLogicalAssign=52
BitAndAssign=53
BitXorAssign=54
BitOrAssign=55
Arrow=56
NullLiteral=57
BooleanLiteral=58
AndLiteral=59
OrLiteral=60
DecimalIntegerLiteral=61
HexIntegerLiteral=62
BinaryIntegerLiteral=63
DecimalLiteral=64
Break=65
Do=66
Instanceof=67
Typeof=68
Case=69
Else=70
New=71
Var=72
Catch=73
Finally=74
Return=75
Void=76
Continue=77
For=78
Switch=79
While=80
Debugger=81
Function=82
This=83
With=84
Default=85
If=86
Throw=87
Delete=88
In=89
Try=90
As=91
From=92
ReadOnly=93
Async=94
Await=95
Class=96
Enum=97
Extends=98
Super=99
Const=100
Export=101
Import=102
Implements=103
Let=104
Private=105
Public=106
Interface=107
Package=108
Protected=109
Static=110
Any=111
Number=112
Boolean=113
String=114
Symbol=115
TypeAlias=116
Constructor=117
Abstract=118
At=119
StringLiteral=120
TemplateStringLiteral=121
Identifier=122
WhiteSpaces=123
LineTerminator=124
UnexpectedCharacter=125
CpExprStart=126
'['=4
']'=5
'('=6
')'=7
'{'=8
'}'=9
';'=10
','=11
'='=12
'??'=13
'?'=14
'?.'=15
':'=16
'::'=17
'...'=18
'.'=19
'++'=20
'--'=21
'+'=22
'-'=23
'~'=24
'!'=25
'*'=26
'/'=27
'%'=28
'>>'=29
'<<'=30
'>>>'=31
'<'=32
'>'=33
'<='=34
'>='=35
'=='=36
'!='=37
'==='=38
'!=='=39
'&'=40
'^'=41
'|'=42
'&&'=43
'||'=44
'*='=45
'/='=46
'%='=47
'+='=48
'-='=49
'<<='=50
'>>='=51
'>>>='=52
'&='=53
'^='=54
'|='=55
'=>'=56
'null'=57
'and'=59
'or'=60
'break'=65
'do'=66
'instanceof'=67
'typeof'=68
'case'=69
'else'=70
'new'=71
'var'=72
'catch'=73
'finally'=74
'return'=75
'void'=76
'continue'=77
'for'=78
'switch'=79
'while'=80
'debugger'=81
'function'=82
'this'=83
'with'=84
'default'=85
'if'=86
'throw'=87
'delete'=88
'in'=89
'try'=90
'as'=91
'from'=92
'readonly'=93
'async'=94
'await'=95
'class'=96
'enum'=97
'extends'=98
'super'=99
'const'=100
'export'=101
'import'=102
'implements'=103
'let'=104
'private'=105
'public'=106
'interface'=107
'package'=108
'protected'=109
'static'=110
'any'=111
'number'=112
'boolean'=113
'string'=114
'symbol'=115
'type'=116
'constructor'=117
'abstract'=118
'@'=119
'#{'=126
